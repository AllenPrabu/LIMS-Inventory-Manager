import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import authService from '../services/authService'; // Using the new authService
import {
  Container,
  Paper,
  TextField,
  Button,
  Typography,
  Snackbar,
  Alert,
} from '@mui/material';

/**
 * The Login component for user authentication.
 */
const Login = () => {
  const navigate = useNavigate();
    const [username, setUsername] = useState('');
    const [password, setPassword] = useState('');
    const [error, setError] = useState('');
  const [openSnackbar, setOpenSnackbar] = useState(false);
  const [successMessage, setSuccessMessage] = useState('');

  /**
   * Handles the form submission for login.
   * @param {Event} e - The form submission event.
   */
  const handleSubmit = async (e) => {
    e.preventDefault();
        try {
      const data = await authService.login({ username, password });
      setSuccessMessage('Login successful!');
      setOpenSnackbar(true);
      console.log(data); // Log the response data as in your example
      // You can add navigation to the dashboard or other page here
      // For example: navigate('/dashboard');
        } catch (err) {
      setError(err.message || 'Login failed');
        }
    };

  const handleCloseSnackbar = () => {
    setOpenSnackbar(false);
  };

    return (
        <Container maxWidth="xs">
      <Paper elevation={3} sx={{ p: 3, mt: 8, borderRadius: 2 }}>
        <Typography variant="h5" gutterBottom>
          Login
        </Typography>
        <form onSubmit={handleSubmit}>
                <TextField
                    label="Username"
            variant="outlined"
            fullWidth
                    margin="normal"
                    value={username}
                    onChange={(e) => setUsername(e.target.value)}
            required
                />
                <TextField
                    label="Password"
                    type="password"
            variant="outlined"
            fullWidth
                    margin="normal"
                    value={password}
                    onChange={(e) => setPassword(e.target.value)}
            required
                />
          {error && (
            <Typography color="error" variant="body2" sx={{ mt: 1 }}>
              {error}
            </Typography>
          )}
                    <Button
            type="submit"
            variant="contained"
            color="primary"
            fullWidth
            sx={{ mt: 2, borderRadius: 2 }}
                    >
            Login
                    </Button>
        </form>
            </Paper>
      <Snackbar open={openSnackbar} autoHideDuration={6000} onClose={handleCloseSnackbar}>
        <Alert onClose={handleCloseSnackbar} severity="success" sx={{ width: '100%' }}>
          {successMessage}
        </Alert>
      </Snackbar>
        </Container>
    );
};

export default Login;
